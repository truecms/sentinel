"""Add performance indexes for module sync

Revision ID: 86e8c4f0f1cf
Revises: f2f02d637f4c
Create Date: 2025-06-29 12:08:52.887147

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision: str = '86e8c4f0f1cf'
down_revision: Union[str, None] = 'f2f02d637f4c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add indexes for performance optimization
    
    # Get connection and inspector
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    
    # Define indexes to create
    indexes_to_create = [
        ('ix_modules_machine_name', 'modules', ['machine_name']),
        ('ix_module_versions_module_id_version_string', 'module_versions', ['module_id', 'version_string']),
        ('ix_site_modules_site_id_module_id', 'site_modules', ['site_id', 'module_id']),
        ('ix_modules_is_deleted', 'modules', ['is_deleted']),
        ('ix_module_versions_is_deleted', 'module_versions', ['is_deleted']),
        ('ix_site_modules_is_deleted', 'site_modules', ['is_deleted']),
    ]
    
    # Create indexes only if they don't exist
    for index_name, table_name, columns in indexes_to_create:
        try:
            # Check if table exists first
            if not inspector.has_table(table_name):
                print(f"Table {table_name} does not exist yet, skipping index {index_name}")
                continue
                
            existing_indexes = [idx['name'] for idx in inspector.get_indexes(table_name)]
            if index_name not in existing_indexes:
                op.create_index(index_name, table_name, columns, unique=False)
        except Exception as e:
            print(f"Error creating index {index_name}: {e}")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop indexes
    indexes_to_drop = [
        ('ix_site_modules_is_deleted', 'site_modules'),
        ('ix_module_versions_is_deleted', 'module_versions'),
        ('ix_modules_is_deleted', 'modules'),
        ('ix_site_modules_site_id_module_id', 'site_modules'),
        ('ix_module_versions_module_id_version_string', 'module_versions'),
        ('ix_modules_machine_name', 'modules'),
    ]
    
    for index_name, table_name in indexes_to_drop:
        try:
            op.drop_index(index_name, table_name=table_name)
        except Exception as e:
            print(f"Error dropping index {index_name}: {e}")
    # ### end Alembic commands ###
